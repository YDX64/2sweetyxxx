name: 🚀 Deploy to Coolify

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📋 Install dependencies
      run: npm ci
      
    - name: 🔍 Run TypeScript check
      run: npm run check
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 🧪 Run tests (when available)
      run: echo "Tests will be added here"

  backup:
    name: 📦 Create Backup
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    
    steps:
    - name: 🔄 Trigger backup on server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          chmod +x /root/backup-system.sh
          /root/backup-system.sh

  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, backup]
    
    steps:
    - name: 🎯 Trigger Coolify Deployment
      run: |
        echo "✅ Deployment triggered automatically by Coolify"
        echo "🔗 Monitor at: http://${{ secrets.SERVER_HOST }}:8000"
        
    - name: 📱 Send Notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          🚀 Deployment Successful!
          
          📦 Project: Soulmate App
          🌿 Branch: ${{ github.ref_name }}
          👤 Author: ${{ github.actor }}
          📝 Commit: ${{ github.event.head_commit.message }}
          🔗 URL: https://your-domain.com
          
          ✅ Backup completed before deployment
          ⏰ Time: $(date)

  staging-deploy:
    name: 🧪 Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    needs: test
    
    steps:
    - name: 🎯 Deploy to Staging Environment
      run: |
        echo "🧪 Staging deployment"
        echo "This would deploy to staging.your-domain.com" 